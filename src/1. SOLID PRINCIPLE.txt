1. SOLID PRINCIPLE
2. DATA TYPES: Primitive, Reference
3. Class
4 Interface: has a method without a body
5 Strings
6. Access Modifiers
objects


S - Single Responsibility
O - Open/Close principles
L - Liskov Substitution principle
I - Interface Segregation 
D -Dependency Inversion

Pillars of OOP
1. Abstraction: Is the processing of trying to hide complex details and showing important parts eg. driving a car without knowing how the engine works
2. Inheritance: This entails inheriting methods and fields from a parent class
3. Polymorphism: Something that can appear or work in MULTIPLE FORMS. eg a method sound
4. Encapsulation: Wrapping methods and data together and hiding them from public access eg you can't directly touch a car's engine

POJO:
Plain Old Java Object. It has private fields Provides public getters and settersHas no business logic (i.e., no complex methods)Doesnâ€™t extend or implement any special Java frameworks or libraries